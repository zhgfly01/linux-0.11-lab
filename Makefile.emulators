# Allow to run kernel on different emulators with different prebuilt rootfs

# Rootfs preparation

hda:
	@make hda -C rootfs

flp:
	@make flp -C rootfs

ramfs:
	@make ramfs -C rootfs

# VM (Qemu) Setting for different rootfs

ROOT_RAM = 0000
ROOT_FDB = 021d
ROOT_HDA = 0301

SETROOTDEV_CMD = $(SETROOTDEV) images/Image
SETROOTDEV_CMD_RAM = $(SETROOTDEV_CMD) $(ROOT_RAM) rootfs/$(RAM_IMG)
SETROOTDEV_CMD_FDB = $(SETROOTDEV_CMD) $(ROOT_FDB)
SETROOTDEV_CMD_HDA = $(SETROOTDEV_CMD) $(ROOT_HDA)

QEMU_CMD = $(QEMU) -m 16M -boot a -fda images/Image
QEMU_CMD_FDB = $(QEMU_CMD) -fdb rootfs/$(FLP_IMG)
QEMU_CMD_HDA = $(QEMU_CMD) -hda rootfs/$(HDA_IMG)
nullstring :=
QEMU_DBG = $(nullstring) -s -S #-nographic #-serial '/dev/ttyS0'"



# Allow to use curses based console via ssh
VM_DISPLAY =
ifeq ($(G),0)
	VM_DISPLAY = $(nullstring) -curses
endif

# Running on emulators with differrent rootfs

ramdisk-boot:
	@# Force init/main.o build with ramdisk support
	make -B init/main.o RAMDISK=2048

start: ramdisk-boot Image
	$(SETROOTDEV_CMD_RAM)
	$(QEMU_CMD)$(VM_DISPLAY)

start-fd: Image flp
	$(SETROOTDEV_CMD_FDB)
	$(QEMU_CMD_FDB)$(VM_DISPLAY)

start-hd: Image hda
	$(SETROOTDEV_CMD_HDA)
	$(QEMU_CMD_HDA)$(VM_DISPLAY)

# Debugging the above targets

debug: ramdisk-boot Image
	$(SETROOTDEV_CMD_RAM)
	$(QEMU_CMD)$(QEMU_DBG)$(VM_DISPLAY) &
	sleep 2
	gnome-terminal -e "ddd -x tools/gdbinit"

debug-fd: Image flp
	$(SETROOTDEV_CMD_FDB)
	$(QEMU_CMD_FDB)$(QEMU_DBG)$(VM_DISPLAY) &
	sleep 2
	gnome-terminal -e "ddd -x tools/gdbinit"

debug-hd: Image hda
	$(SETROOTDEV_CMD_HDA)
	$(QEMU_CMD_HDA)$(QEMU_DBG)$(VM_DISPLAY) &
	sleep 2
	gnome-terminal -e "ddd -x tools/gdbinit"
